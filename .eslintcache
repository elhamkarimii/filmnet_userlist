[{"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\index.tsx":"1","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\reportWebVitals.ts":"2","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\App.tsx":"3","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Context.tsx":"4","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\useData.tsx":"5","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\UserForm\\index.tsx":"6","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\EditUser\\index.tsx":"7","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\MainApp\\index.tsx":"8","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Reducer.tsx":"9","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Validation.tsx":"10","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\UserForm\\style.tsx":"11","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\MainApp\\style.tsx":"12","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SearchBox\\index.tsx":"13","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SortBox\\index.tsx":"14","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserList\\index.tsx":"15","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserNotFound\\index.tsx":"16","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SearchBox\\style.tsx":"17","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SortBox\\style.tsx":"18","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserNotFound\\style.tsx":"19","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserList\\style.tsx":"20","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserInfo\\index.tsx":"21","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserInfo\\style.tsx":"22"},{"size":517,"mtime":1611397680000,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1611397680000,"results":"25","hashOfConfig":"24"},{"size":1481,"mtime":1611529158715,"results":"26","hashOfConfig":"24"},{"size":104,"mtime":1611397680000,"results":"27","hashOfConfig":"24"},{"size":1002,"mtime":1611528626618,"results":"28","hashOfConfig":"24"},{"size":5553,"mtime":1611526958321,"results":"29","hashOfConfig":"24"},{"size":1094,"mtime":1611528896625,"results":"30","hashOfConfig":"24"},{"size":1802,"mtime":1611529158701,"results":"31","hashOfConfig":"24"},{"size":3284,"mtime":1611527187694,"results":"32","hashOfConfig":"24"},{"size":1035,"mtime":1611397680000,"results":"33","hashOfConfig":"24"},{"size":1196,"mtime":1611476058000,"results":"34","hashOfConfig":"24"},{"size":614,"mtime":1611475724000,"results":"35","hashOfConfig":"24"},{"size":1214,"mtime":1611476362000,"results":"36","hashOfConfig":"24"},{"size":840,"mtime":1611476686000,"results":"37","hashOfConfig":"24"},{"size":1541,"mtime":1611477042000,"results":"38","hashOfConfig":"24"},{"size":293,"mtime":1611477188000,"results":"39","hashOfConfig":"24"},{"size":500,"mtime":1611476362000,"results":"40","hashOfConfig":"24"},{"size":205,"mtime":1611476686000,"results":"41","hashOfConfig":"24"},{"size":212,"mtime":1611477166000,"results":"42","hashOfConfig":"24"},{"size":394,"mtime":1611477014000,"results":"43","hashOfConfig":"24"},{"size":1494,"mtime":1611476896000,"results":"44","hashOfConfig":"24"},{"size":209,"mtime":1611476844000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qnvldw",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\reportWebVitals.ts",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\App.tsx",["95","96","97","98","99"],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Context.tsx",[],["100","101"],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\useData.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\UserForm\\index.tsx",["102"],"import React, { useContext, useState } from \"react\";\r\nimport { StateContext } from \"../../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { SnackbarProvider, VariantType, useSnackbar } from \"notistack\";\r\nimport Validation from \"../../Validation\";\r\nimport {useStyles} from \"./style\"\r\nimport useData from \"../../useData\";\r\n\r\ninterface TargetType {\r\n  val: string;\r\n  name: string;\r\n}\r\ninterface NewUserType {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  avatar: string;\r\n  id: number;\r\n}\r\n\r\ninterface UserFormType {\r\n  handleSaveUser: (mode: string) => void;\r\n  handleInputChange: (target: TargetType) => void;\r\n  handleBackButton: () => void;\r\n}\r\n\r\nfunction UserForm({\r\n  handleSaveUser,\r\n  handleInputChange,\r\n  handleBackButton,\r\n}: UserFormType) {\r\n  const [valid, setValid] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    firstValidation: true,\r\n  });\r\n\r\n  const value: NewUserType = useContext(StateContext);\r\n  const { first_name, last_name, email } = value;\r\n  console.log(value,'value')\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickVariant = (variant: VariantType) => () => {\r\n    enqueueSnackbar(\" successful saved!\", { variant });\r\n    handleSaveUser('edit');\r\n  };\r\n\r\n  const handleOnChange = (e: any) => {\r\n    Validation({\r\n      name: e.target.name,\r\n      val: e.target.value,\r\n      validation: valid,\r\n    }).then((response: any) => setValid(response));\r\n    handleInputChange({\r\n      name: e.target.name,\r\n      val: e.target.value,\r\n    });\r\n  };\r\n\r\n  const checkDisable = () => {\r\n    if (valid.firstValidation) {\r\n      return true;\r\n    } else {\r\n      if (first_name && last_name && email) {\r\n        if (valid.first_name || valid.last_name || valid.email) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.cotainer}>\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12} className={classes.paper} spacing={1}>\r\n          <form>\r\n            <Grid item xs={12} className={classes.row}>\r\n              <Box className={classes.box}>\r\n                <label>First name:</label>\r\n              </Box>\r\n              <TextField\r\n                className={classes.textField}\r\n                value={first_name}\r\n                name=\"first_name\"\r\n                onChange={handleOnChange}\r\n                error={valid.first_name ? true : false}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"first name\"\r\n                helperText={valid.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.row}>\r\n              <Box className={classes.box}>\r\n                <label>Last name:</label>\r\n              </Box>\r\n              <TextField\r\n                className={classes.textField}\r\n                value={last_name}\r\n                name=\"last_name\"\r\n                onChange={handleOnChange}\r\n                error={valid.last_name ? true : false}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"first name\"\r\n                helperText={valid.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.row}>\r\n              <Box className={classes.box}>\r\n                <label>Email:</label>\r\n              </Box>\r\n              <TextField\r\n                className={classes.textField}\r\n                type=\"email\"\r\n                value={email}\r\n                name=\"email\"\r\n                onChange={handleOnChange}\r\n                error={valid.email ? true : false}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"first name\"\r\n                helperText={valid.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.paper}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClickVariant(\"success\")}\r\n            className={classes.buttons}\r\n            disabled={checkDisable()}\r\n          >\r\n            SAVE!\r\n          </Button>\r\n\r\n          <Link to=\"/\">\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleBackButton}\r\n              className={classes.buttons}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default function IntegrationNotistack(props:UserFormType) { \r\n\r\n  // const { dispatch } = useData();\r\n  // function handleSaveUser(mode: string) {\r\n  //   dispatch({\r\n  //     type: \"HANDLE_SAVE_USER\",\r\n  //     payload: mode,\r\n  //   });\r\n  // }\r\n  // function handleInputChange({ name, val }: TargetType) {\r\n  //   dispatch({\r\n  //     type: \"HANDLE_USER_INPUT\",\r\n  //     payload: {\r\n  //       name: name,\r\n  //       val: val,\r\n  //     }, \r\n  //   });\r\n  // }\r\n  // function handleBackButton() {\r\n  //   dispatch({\r\n  //     type: \"HANDLE_BACK_BUTTON\",\r\n  //   });\r\n  // }\r\n  \r\n  return (\r\n    <SnackbarProvider maxSnack={2} >\r\n      <UserForm\r\n      {...props}\r\n      />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\EditUser\\index.tsx",["103"],"import React from \"react\";\r\nimport useData from \"../../useData\";\r\nimport UserForm from \"../UserForm/index\";\r\n\r\ninterface TargetType {\r\n  val: string;\r\n  name: string;\r\n}\r\ninterface UserFormType {\r\n  handleSaveUser: (mode: string) => void;\r\n  handleInputChange: (target: TargetType) => void;\r\n  handleBackButton: () => void;\r\n}\r\nexport default function EditUser() { \r\n\r\n  const { dispatch } = useData();\r\n  function handleSaveUser(mode: string) {\r\n    dispatch({\r\n      type: \"HANDLE_SAVE_USER\",\r\n      payload: mode,\r\n    });\r\n  }\r\n  function handleInputChange({ name, val }: TargetType) {\r\n    dispatch({\r\n      type: \"HANDLE_USER_INPUT\",\r\n      payload: {\r\n        name: name,\r\n        val: val,\r\n      }, \r\n    });\r\n  }\r\n  function handleBackButton() {\r\n    dispatch({\r\n      type: \"HANDLE_BACK_BUTTON\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <UserForm\r\n        handleSaveUser={handleSaveUser}\r\n        handleInputChange={handleInputChange}\r\n        handleBackButton={handleBackButton}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\MainApp\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Reducer.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Validation.tsx",["104","105","106"],"export default function ({ name, val, validation }: any) {\r\n  const promise = new Promise((resolve) => {\r\n    let valid = { ...validation };\r\n    const reg = new RegExp(\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    if (name === \"first_name\") {\r\n      if (val.length > 20 || val.length === 0) {\r\n        valid.first_name = \"  value between 1 and 20 characters\";\r\n      } else {\r\n        valid.first_name = \"\";\r\n      }\r\n    }\r\n    if (name === \"last_name\") {\r\n      if (val.length > 20 || val.length === 0) {\r\n        valid.last_name = \" value between 1 and 20 characters\";\r\n      } else {\r\n        valid.last_name = \"\";\r\n      }\r\n    }\r\n    if (name === \"email\") {\r\n      if (!reg.test(val) || val.length === 0) {\r\n        valid.email = \"invalid email addres\";\r\n      } else {\r\n        valid.email = \"\";\r\n      }\r\n    }\r\n    valid.firstValidation = false;\r\n    resolve(valid);\r\n  });\r\n  return promise;\r\n}\r\n","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\UserForm\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\Pages\\MainApp\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SearchBox\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SortBox\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserList\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserNotFound\\index.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SearchBox\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\SortBox\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserNotFound\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserList\\style.tsx",[],"C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserInfo\\index.tsx",["107"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TableCell } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"./style\"\r\n\r\ninterface Info {\r\n  id: number;\r\n  email?: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  avatar: string;\r\n}\r\n\r\ninterface InfoType {\r\n  info: Info;\r\n  handleDeleteUser: () => void;\r\n  handleEditUser: () => void;\r\n}\r\n\r\nexport default function UserInfo({\r\n  info,\r\n  handleDeleteUser,\r\n  handleEditUser,\r\n}: InfoType) {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <img\r\n          src={info.avatar}\r\n          alt={info.id.toString()}\r\n          width=\"121px\"\r\n          height=\"121px\"\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"right\">{info.first_name}</TableCell>\r\n      <TableCell align=\"right\">{info.last_name}</TableCell>\r\n      <TableCell align=\"right\">{info.email}</TableCell>\r\n      <TableCell align=\"right\">\r\n        <Link to=\"/editUser\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleEditUser}\r\n            className={classes.optionBtn}\r\n          >\r\n            EDIT\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={handleDeleteUser}\r\n          className={classes.optionBtn}\r\n        >\r\n          DELETE\r\n        </Button>\r\n      </TableCell>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Elham\\Desktop\\filmnetTask\\src\\Components\\UserInfo\\style.tsx",[],{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":47},{"ruleId":"108","severity":1,"message":"113","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":28},{"ruleId":"108","severity":1,"message":"114","line":12,"column":11,"nodeType":"110","messageId":"111","endLine":12,"endColumn":15},{"ruleId":"108","severity":1,"message":"115","line":19,"column":11,"nodeType":"110","messageId":"111","endLine":19,"endColumn":21},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"108","severity":1,"message":"120","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":15},{"ruleId":"108","severity":1,"message":"121","line":9,"column":11,"nodeType":"110","messageId":"111","endLine":9,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":1,"column":1,"nodeType":"124","endLine":32,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":5,"column":17,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":42,"nodeType":"127","messageId":"128","endLine":5,"endColumn":43,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"131","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'IntegrationNotistack' is defined but never used.","'Info' is defined but never used.","'TargetType' is defined but never used.","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'useData' is defined but never used.","'UserFormType' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["134","135"],["136","137"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"138","fix":"139","desc":"140"},{"messageId":"141","fix":"142","desc":"143"},{"messageId":"138","fix":"144","desc":"140"},{"messageId":"141","fix":"145","desc":"143"},"removeEscape",{"range":"146","text":"147"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"148","text":"149"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"150","text":"147"},{"range":"151","text":"149"},[187,188],"",[187,187],"\\",[212,213],[212,212]]